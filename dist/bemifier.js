// Generated by CoffeeScript 1.9.3
(function() {
  var Bemifier;

  Bemifier = (function() {
    Bemifier.prototype._compact = function(arr) {
      var i, item, len, newArray;
      if (_ && _.compact) {
        _.compact(arr);
      }
      newArray = [];
      for (i = 0, len = arr.length; i < len; i++) {
        item = arr[i];
        if (item === void 0 || item === null) {
          newArray.push(item);
        }
      }
      return newArray;
    };

    function Bemifier(prefixes) {
      this.prefixes = prefixes != null ? prefixes : {};
      this.prefixes || (this.prefixes = {
        blockElement: '__',
        elementModifier: '--',
        nameSpacing: '-'
      });
      console.log(this.classNames, this._BemParse);
    }

    Bemifier.prototype.classNames = function() {
      var args, classNames;
      args = Array.prototype.slice.call(arguments);
      classNames = [];
      if (args[0] instanceof Array) {
        classNames = args[0];
        args = args.slice(1);
      } else if (args[0] instanceof String) {
        classNames.push(args[0]);
        args = args.slice(1);
      }
      console.log('classNames', args, this.bemParse);
      return classNames.concat(args.map(this.bemParse)).join(' ');
    };

    Bemifier.prototype.bemName = function(name) {
      if (name instanceof Array) {
        return name.join(this.prefixes.nameSpacing);
      } else {
        return name;
      }
    };

    Bemifier.prototype.bemModifier = function(modifier, value) {
      var blockElement, classNames;
      if (value) {
        modifier;
      }
      blockElement = _.compact([block, element]).join(this.prefixes.element);
      if (!(modifierKeys.length > 0)) {
        return blockElement;
      }
      classNames = modifierKeys.map(function(modifierKey) {
        var m;
        modifier = modifiers[modifierKey];
        m = this.bemModifier(modifierKey, modifier);
        return _.compact([blockElement, m]).join(this.prefixes.modifier);
      });
      classNames.unshift(blockElement);
      return classNames.join(' ');
    };

    return Bemifier;

  })();

  if (module || module.exports) {
    module.exports = Bemifier;
  } else {
    window.Bemifier = Bemifier;
  }

}).call(this);
